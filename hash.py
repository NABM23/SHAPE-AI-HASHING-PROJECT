import hashlib
print("WELCOME TO ENCRYPTION WORLD")
print()
print('LETS START ENCRYPTING')
print()

def md5con():
    print('-----------------------------')
    print('md5 ENCRYPTER')
    print()
    text = input("ENTRE THE TEXT : ")
    textencode = text.encode('utf-8')
    md5text = hashlib.md5(textencode).hexdigest()
    print("md5 ENCRYPTION OF {} is {}".format(text,md5text))
    print()
    print('-----------------------------')
    print()
    print("TO CONTINUE TYPE C")
    print("TO EXIT PRESS ANYTHING")
    print()
    i = input("YOUR CHOICE : ").upper()
    print()
    if i == "C":
        menu()

def sha1con():
    print('-----------------------------')
    print('sha1 ENCRYPTER')
    print()
    text = input("ENTRE THE TEXT : ")
    textencode = text.encode('utf-8')
    sha1text = hashlib.sha1(textencode).hexdigest()
    print("sha1 ENCRYPTION OF {} is {}".format(text,sha1text))
    print()
    print('-----------------------------')
    print()
    print("TO CONTINUE TYPE C")
    print("TO EXIT PRESS ANYTHING")
    print()
    i = input("YOUR CHOICE : ").upper()
    print()
    if i == "C":
        menu()

def sha224con():
    print('-----------------------------')
    print('sha224 ENCRYPTER')
    print()
    text = input("ENTRE THE TEXT : ")
    textencode = text.encode('utf-8')
    ha224text = hashlib.sha224(textencode).hexdigest()
    print("sha224 ENCRYPTION OF {} is {}".format(text,ha224text))
    print()
    print('-----------------------------')
    print()
    print("TO CONTINUE TYPE C")
    print("TO EXIT PRESS ANYTHING")
    print()
    i = input("YOUR CHOICE : ").upper()
    print()
    if i == "C":
        menu()

def sha256con():
    print('-----------------------------')
    print('sha256 ENCRYPTER')
    print()
    text = input("ENTRE THE TEXT : ")
    textencode = text.encode('utf-8')
    md5text = hashlib.sha256(textencode).hexdigest()
    print("sha256 ENCRYPTION OF {} is {}".format(text,md5text))
    print()
    print('-----------------------------')
    print()
    print("TO CONTINUE TYPE C")
    print("TO EXIT PRESS ANYTHING")
    print()
    i = input("YOUR CHOICE : ").upper()
    print()
    if i == "C":
        menu()

def sha384con():
    print('-----------------------------')
    print('sha384 ENCRYPTER')
    print()
    text = input("ENTRE THE TEXT : ")
    textencode = text.encode('utf-8')
    sha384text = hashlib.sha384(textencode).hexdigest()
    print("sha384 ENCRYPTION OF {} is {}".format(text,sha384text))
    print()
    print('-----------------------------')
    print()
    print("TO CONTINUE TYPE C")
    print("TO EXIT PRESS ANYTHING")
    print()
    i = input("YOUR CHOICE : ").upper()
    print()
    if i == "C":
        menu()

def sha512con():
    print('-----------------------------')
    print('sha512 ENCRYPTER')
    print()
    text = input("ENTRE THE TEXT : ")
    textencode = text.encode('utf-8')
    sha512text = hashlib.sha512(textencode).hexdigest()
    print("sha512 OF {} is {}".format(text,sha512text))
    print()
    print('-----------------------------')
    print()
    print("TO CONTINUE TYPE C")
    print("TO EXIT PRESS ANYTHING")
    print()
    i = input("YOUR CHOICE : ").upper()
    print()
    if i == "C":
        menu()


def saltitertext():
    print('-----------------------------')
    print("SALTING OF STRING WITH ITERATIONS")
    print()
    text = input("ENTRE THE TEXT : ")
    print()
    print("NOTE : SALTING IS BY DEFALUT BEING PERFORMED IN md5")
    textencode = text.encode('utf-8')
    md5text = hashlib.md5(textencode).hexdigest()
    print("md5 ENCRYPTION OF TEXT PROVIDED",md5text)
    print()
    salt = input("PROVIDE THE STRING SALT YOU WANT TO ADD : ")
    print()
    saltencode = salt.encode('utf_8')
    iters = int(input("PROVIDE NUMBER OF ITERATION YOU WANT : "))
    print()
    saltedtext = hashlib.pbkdf2_hmac('md5',textencode,saltencode,iters)
    print("SALTING OF TEXT {} WITH SALT {} WITH NUMBER OF ITERATIONS {} IS {}".format(text,salt,iters,saltedtext.hex()))
    print()
    print('-----------------------------')
    print()
    print("TO CONTINUE TYPE C")
    print("TO EXIT PRESS ANYTHING")
    print()
    i = input("YOUR CHOICE : ").upper()
    print()
    if i == "C":
        menu()

def menu():
    print('----------------------------------------------------------------')  
    print()
    print("HASHING MENU")
    print()
    print("1. CONVERT A STRING TO md5")
    print("2. CONVERT A STRING TO sha1")
    print("3. CONVERT A STRING TO sha224")
    print("4. CONVERT A STRING TO sha256")
    print("5. CONVERT A STRING TO sha384")
    print("6. CONVERT A STRING TO sha512")
    print("7. SALT A STRING WITH ITERATIONS")
    print()
    print('----------------------------------------------------------------')
    print()
    a = int(input("ENTRE YOUR CHOICE : "))
    print()
    if a==1:
        md5con()
    elif a==2:
        sha1con()
    elif a==3:
        sha224con()
    elif a==4:
        sha256con()
    elif a==5:
        sha384con()
    elif a==6:
        sha512con()
    elif a==7:
        saltitertext()

menu()
